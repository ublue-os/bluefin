name: Build Bluefin ISOs
on:
  workflow_dispatch:
env:
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build-iso:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      id-token: write
    container:
      image: fedora:${{ matrix.major_version }}
      options: "--privileged"
      volumes:
        - "/:/host"
    strategy:
      fail-fast: false
      matrix:
        image_name: [bluefin, bluefin-nvidia, bluefin-dx, bluefin-dx-nvidia]
        major_version: [38, 39]
        image_tag: [latest,gts]
        exclude:
          - major_version: 38
            image_tag: latest
          - major_version: 39
            image_tag: gts
    steps:
      - name: Build ISOs
        #if: github.event_name == 'push' && github.ref_name == github.event.repository.default_branch
        uses: ublue-os/isogenerator@1.0.7
        with:
          ARCH: x86_64
          IMAGE_NAME: ${{ matrix.image_name }}
          IMAGE_REPO: ghcr.io/ublue-os
          VARIANT: 'Silverblue'
          VERSION: ${{ matrix.major_version }}
          IMAGE_TAG: ${{ matrix.image_tag }}
          ACTION_REPO: ublue-os/isogenerator
          ACTION_REF: 1.0.5
      - name: Upload ISOs and SHA Checksum Files to R2
        shell: bash
        run: |
          export RCLONE_CONFIG_R2_TYPE=s3
          export RCLONE_CONFIG_R2_PROVIDER=Cloudflare
          export RCLONE_CONFIG_R2_ACCESS_KEY_ID=${{ secrets.R2_ACCESS_KEY_ID }}
          export RCLONE_CONFIG_R2_SECRET_ACCESS_KEY=${{ secrets.R2_SECRET_ACCESS_KEY }}
          export RCLONE_CONFIG_R2_REGION=auto
          export RCLONE_CONFIG_R2_ENDPOINT=${{ secrets.R2_ENDPOINT }}
          dnf install -y rclone
          rclone copy ./end_iso R2:bluefin
