name: Build and Push Image
on:
  schedule:
    - cron: '40 16 * * *'  # 16:40 UTC everyday
  merge_group:
  pull_request:
    branches:
      - main
      - testing
    paths-ignore:
      - '**.md'
  push:
    branches:
      - main
      - testing
    paths-ignore:
      - '**.md'
    tags:
      - v*.*.*
  workflow_dispatch:
env:
    IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  check-just-files:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Check just syntax
        uses: ublue-os/just-action@v1

  build-container:
    runs-on: ubuntu-22.04
    needs: [check-just-files]
    permissions:
      contents: read
      packages: write
      id-token: write
    continue-on-error: false
    strategy:
      fail-fast: false
      matrix:
        image_name: [bluefin, bluefin-dx]
        image_variant: [main, nvidia, asus, asus-nvidia, framework, surface, surface-nvidia]
        version: [38, 39]
        support: [latest, gts]
        exclude:
          - version: 38
            image_variant: asus
          - version: 38
            image_variant: asus-nvidia
          - version: 38
            support: latest
          - version: 39
            support: gts
    steps:
      - name: Determine AKMODS_FLAVOR
        run: |
          if [[ "${{ matrix.image_variant }}" =~ ^asus* ]]; then
              echo "AKMODS_FLAVOR=asus" >> $GITHUB_ENV
          elif [[ "${{ matrix.image_variant }}" =~ ^surface* ]]; then
              echo "AKMODS_FLAVOR=surface" >> $GITHUB_ENV
          else
              echo "AKMODS_FLAVOR=main" >> $GITHUB_ENV
          fi
      - name: Build Container
        uses: ublue-os/build-action@main
        with:
          image_name: ${{ matrix.image_name }}
          image_variant: ${{ matrix.image_variant }}
          version: ${{ matrix.version }}
          support: ${{ matrix.support }}
          signing_key: ${{ secrets.SIGNING_SECRET }}
          target: ${{ matrix.image_name }}
          extra_build_args: |
            AKMODS_FLAVOR=${{ env.AKMODS_FLAVOR }}

  build-iso:
    runs-on: ubuntu-latest
    needs: [build-container]
    permissions:
      contents: read
      packages: write
      id-token: write
    continue-on-error: false
    strategy:
      fail-fast: false
      matrix:
        image_name: [bluefin, bluefin-nvidia, bluefin-asus, bluefin-asus-nvidia, bluefin-surface, bluefin-surface-nvidia, bluefin-dx, bluefin-dx-nvidia, bluefin-dx-asus, bluefin-dx-surface, bluefin-dx-asus-nvidia, bluefin-dx-surface-nvidia]
        major_version: [39]
        image_tag: ${{ github.event.issue.number && format('pr-{0}', github.event.issue.number) || 'latest' }}
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@v1.3.1

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Build ISOs
        uses: jasonn3/build-container-installer@main
        id: build
        with:
          arch: x86_64
          image_name: ${{ matrix.image_name }}
          image_repo: ghcr.io/ublue-os
          variant: 'Silverblue'
          version: ${{ matrix.major_version }}
          image_tag: ${{ matrix.image_tag }}
          secure_boot_key_url: 'https://github.com/ublue-os/akmods/raw/main/certs/public_key.der'
          enrollment_password: 'ublue-os'
          iso_name: ${{ matrix.image_name }}-${{ matrix.image_tag }}-${{ matrix.major_version}}
          enable_cache_dnf: "false"
          enable_cache_skopeo: "false"
          flatpak_remote_refs_dir: /github/workspace/flatpaks

      - name: Upload ISOs and Checksum to Job Artifacts
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.build.outputs.iso_name }}
          path: |
            ${{ steps.build.outputs.iso_path }}
            ${{ steps.build.outputs.iso_path }}-CHECKSUM
          if-no-files-found: error
          retention-days: 0
          compression-level: 0
          overwrite: true

      - name: Upload ISOs and Checksum to R2
        if: startsWith(github.ref, 'refs/tags/v')
        shell: bash
        env:
          RCLONE_CONFIG_R2_TYPE: s3
          RCLONE_CONFIG_R2_PROVIDER: Cloudflare
          RCLONE_CONFIG_R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          RCLONE_CONFIG_R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          RCLONE_CONFIG_R2_REGION: auto
          RCLONE_CONFIG_R2_ENDPOINT: ${{ secrets.R2_ENDPOINT }}
          SOURCE_ISO: ${{ steps.build.outputs.iso_path }}
          SOURCE_ISO_CHECKSUM: ${{ steps.build.outputs.iso_path }}-CHECKSUM
        run: |
          apt-get update
          apt-get install -y rclone
          rclone copy $SOURCE_ISO R2:bluefin
          rclone copy $SOURCE_ISO_CHECKSUM R2:bluefin
