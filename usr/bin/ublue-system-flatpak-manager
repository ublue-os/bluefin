#!/usr/bin/env bash

# Script Version
VER=1
VER_FILE="/etc/ublue/flatpak_manager_version"
VER_RAN=$(cat $VER_FILE)

# Run script if updated
if [[ -f $VER_FILE && $VER = $VER_RAN ]]; then
  echo "Flatpak manager v$VER has already ran. Exiting..."
  exit 0
fi

# Remove fedora flatpak repo
if grep -qz 'fedora' <<< $(flatpak remotes); then
  flatpak remote-delete --user fedora --force
fi

# Lists of flatpaks
FLATPAK_LIST=$(flatpak list --columns=application)
INSTALL_LIST=$(cat /etc/flatpak/system/install)
REMOVE_LIST=$(cat /etc/flatpak/system/remove)

# Install flatpaks in list
if [[ -n $INSTALL_LIST ]]; then
  if ! flatpak install --system --noninteractive flathub ${INSTALL_LIST[@]}; then
    # exit on error
    exit 1
  fi
fi

# Remove flatpaks in list
if [[ -n $REMOVE_LIST ]]; then
  flatpak remove --system --noninteractive ${REMOVE_LIST[@]}
fi

# Opt out of and remove Fedora's flatpak repo
if grep -qz 'fedora' <<< $(flatpak remotes); then
  /usr/lib/fedora-third-party/fedora-third-party-opt-out
  /usr/bin/fedora-third-party disable
  flatpak remote-delete fedora --force

  # Remove flatpak apps from origin fedora
  FEDORA_FLATPAKS=$(flatpak list --app --columns=application,origin | grep -w 'fedora' | awk '{print $1}')
  flatpak remove --system --noninteractive ${FEDORA_FLATPAKS[@]}

  # Remove flatpak runtimes from origin fedora
  FEDORA_FLATPAKS=$(flatpak list --runtime --columns=application,arch,branch,origin | grep -w 'fedora' | awk '{print $1"/"$2"/"$3}')
  flatpak remove --system --noninteractive ${FEDORA_FLATPAKS[@]}
fi

# Disable the system variant of the flathub repo
flatpak remote-modify flathub --disable --system

notify-send "Flatpak installer" "Finished installing system flatpaks" --app-name="Flatpak installer" -u NORMAL

mkdir -p /etc/ublue
echo $VER > $VER_FILE
